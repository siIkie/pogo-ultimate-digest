name: POGO Ultimate Pipeline

on:
  schedule:
    - cron: "0 */4 * * *"   # every 4 hours
  workflow_dispatch:

permissions:
  contents: write

env:
  PUBLISH_GHPAGES: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      END: ${{ steps.dates.outputs.END }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add repo root to PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Compute date range
        id: dates
        run: |
          echo "START=2024-06-01" >> $GITHUB_OUTPUT
          echo "END=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      # --- SCRAPERS (keep all your existing scripts) ---
      - name: Build events
        run: python build_pogo_library.py

      - name: Build features
        run: python build_features.py

      - name: Build balance
        run: python build_balance.py

      - name: Build wiki library
        run: python build_wiki_library.py

      - name: Scrape PvE Attackers (ALL 18 TYPES)
        run: python scrapers/pve_attackers.py

      - name: Scrape PvP Rankings (PvPoke)
        run: python scrapers/pvp_rankings.py

      - name: Scrape External Events & Raid Bosses (Niantic RSS / sites)
        run: python scrapers/events_external.py

      - name: Scrape Field Research (LeekDuck)
        run: python scrapers/research_leekduck.py

      - name: Scrape Egg Pools (LeekDuck)
        run: python scrapers/eggs_leekduck.py

      - name: Scrape Shiny Availability
        run: python scrapers/shinies.py

      - name: Scrape Items & Bonuses (Niantic Help)
        run: python scrapers/items_bonuses.py

      # --- ENRICH / NORMALIZE / BUNDLES / EXPORTS ---
      - name: Enrich & normalize
        run: |
          python tools/extract_slots.py
          python tools/normalize_merge.py

      - name: Build ICS + Excel bundle
        run: python digest_from_library.py

      - name: Make NDJSON indices (for RAG)
        run: python index/build_indices.py

      - name: Export API endpoints (static JSON)
        run: python api/export_endpoints.py

      - name: Build master bundle (JSON + NDJSON)
        run: python build_master.py

      - name: Create ZIP bundle
        run: |
          cd dist
          zip -r master.zip \
            master.json master.ndjson \
            POGO_Digest.xlsx POGO_Digest.csv POGO_Digest.json POGO_Events.ics \
            api pogo_library

      # --- ARTIFACTS ---
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: POGO_${{ steps.dates.outputs.END }}
          path: |
            dist/master.json
            dist/master.ndjson
            dist/master.zip
            dist/POGO_Digest.xlsx
            dist/POGO_Digest.csv
            dist/POGO_Digest.json
            dist/POGO_Events.ics
            dist/api/*.json
            dist/pogo_library/**/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: POGO_${{ needs.build.outputs.END }}
          path: dist

      # OPTION A: unique tag per run to avoid replace/delete problems
      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: pogo-dataset-${{ needs.build.outputs.END }}-${{ github.run_id }}
          name: "POGO Dataset ${{ needs.build.outputs.END }} (run ${{ github.run_number }})"
          body: "Automated dataset build (events, features, balance, wiki, PvE/PvP, indices, API, bundles)."
          make_latest: true
          preserve_order: true
          fail_on_unmatched_files: false
          files: |
            dist/master.json
            dist/master.ndjson
            dist/master.zip
            dist/POGO_Digest.xlsx
            dist/POGO_Digest.csv
            dist/POGO_Digest.json
            dist/POGO_Events.ics
            dist/api/*.json
            dist/pogo_library/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}