name: POGO Ultimate Pipeline

on:
  schedule:
    - cron: "0"   # never
  workflow_dispatch:

permissions:
  contents: write

env:
  PUBLISH_GHPAGES: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      END: ${{ steps.dates.outputs.END }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests beautifulsoup4 lxml pandas openpyxl pyyaml jsonschema scikit-learn joblib python-dateutil icalendar cloudscraper playwright
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build PvPoke data (pvp_full.json)
        run: |
          python tools/pull_and_build_pvp_full.py --output outputs/pvp_full.json

      - name: Scrape PvP Rankings (consume PvPoke JSON)
        run: |
          python scrapers/pvp_rankings.py --community-input outputs/pvp_full.json
          test -s pogo_library/pvp/index.json

      - name: Install Playwright browsers (Chromium only)
        run: |
          python -m playwright install --with-deps chromium

      - name: Add repo root to PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Compute date range
        id: dates
        shell: bash
        run: |
          echo "START=2024-06-01" >> "$GITHUB_OUTPUT"
          echo "END=$(date +%Y-%m-%d)" >> "$GITHUB_OUTPUT"

      # --- Core library builders ---
      - name: Build events
        run: python build_pogo_library.py

      - name: Build features
        run: python build_features.py

      - name: Build balance
        run: python build_balance.py

      - name: Build wiki library
        run: python build_wiki_library.py

      # --- Scrapers (validation handled inside scripts or by file existence) ---
      - name: Scrape PvE Attackers (ALL 18 TYPES)
        run: |
          python scrapers/pve_attackers.py
          test -s pogo_library/attackers/index.json

      - name: Scrape PvP Rankings (PvPoke)
        run: |
          python scrapers/pvp_rankings.py
          test -s pogo_library/pvp/index.json

      - name: Scrape External Events & Raid Bosses (LeekDuck/News)
        run: |
          python scrapers/events_external.py
          test -s pogo_library/events_external/index.json

      - name: Scrape Field Research (LeekDuck)
        run: |
          python scrapers/research_tasks.py
          test -s pogo_library/research/index.json

      - name: Scrape Egg Pools (LeekDuck)
        run: |
          python scrapers/egg_pools.py
          test -s pogo_library/eggs/index.json

      - name: Scrape Shiny Availability
        run: |
          python scrapers/shinies.py
          test -s pogo_library/shinies/index.json

      - name: Scrape Items & Bonuses (Niantic Help)
        run: |
          python scrapers/items.py
          test -s pogo_library/items/index.json

      # --- Normalize / index / API / bundles ---
      - name: Enrich & normalize
        run: |
          python tools/extract_slots.py
          python tools/normalize_merge.py

      - name: Build ICS + Excel bundle
        run: python digest_from_library.py

      - name: Make NDJSON indices (for RAG)
        run: python index/build_indices.py

      - name: Export API endpoints (static JSON)
        run: python api/export_endpoints.py

      - name: Build master bundle (master.json)
        run: python build_master.py

      - name: Create ZIP bundle
        run: |
          mkdir -p dist
          zip -r dist/master.zip master.json pogo_library api POGO_Digest.* POGO_Events.ics || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: POGO_${{ steps.dates.outputs.END }}
          path: |
            master.json
            dist/master.zip
            POGO_Digest.xlsx
            POGO_Digest.csv
            POGO_Digest.json
            POGO_Events.ics
            pogo_library/**/*
            api/*.json
            index/*.ndjson

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: POGO_${{ needs.build.outputs.END }}
          path: dist

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: pogo-dataset-${{ needs.build.outputs.END }}
          name: "POGO Dataset ${{ needs.build.outputs.END }}"
          body: "Automated POGO dataset build (events, features, balance, wiki, scrapers, indices, API, master.json)."
          make_latest: true
          preserve_order: true
          files: |
            dist/master.json
            dist/master.zip
            dist/POGO_Digest.xlsx
            dist/POGO_Digest.csv
            dist/POGO_Digest.json
            dist/POGO_Events.ics
            dist/api/*.json
            dist/pogo_library/**/*
            dist/index/*.ndjson
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}